{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n// Get started by creating a new React \n// component and importing the libraries!\nimport React from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nexport var Patreon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Patreon, _React$Component);\n\n  function Patreon(props) {\n    var _this;\n\n    _classCallCheck(this, Patreon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Patreon).call(this, props)); // Next up create a new Unity Content object to \n    // initialise and define your WebGL build. The \n    // paths are relative from your index file.\n\n    _this.unityContent = new UnityContent(\"MyGame/Build/Game.json\", \"MyGame/Build/UnityLoader.js\");\n    return _this;\n  } // create a new function for our button to send a\n  // message and spawn enemies in our unity game.\n\n\n  _createClass(Patreon, [{\n    key: \"onClick\",\n    value: function onClick() {\n      // this function sends a message to a game object \n      // named \"SpawnController\" to the public method\n      // \"SpawnEnemies\" with a value of \"10\".\n      this.unityContent.send(\"SpawnController\", \"SpawnEnemies\", 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Finally render the Unity component and pass \n      // the Unity content through the props. And create\n      // a button to handle the click event.\n      return __jsx(\"div\", null, __jsx(\"button\", {\n        onClick: this.onClick.bind(this)\n      }, \"Spawn!\"), __jsx(Unity, {\n        unityContent: this.unityContent\n      }));\n    }\n  }]);\n\n  return Patreon;\n}(React.Component);\nexport default Game;","map":{"version":3,"sources":["C:/Users/AOWSAY/Desktop/AOWSAYWEBSITE/server/pages/patreon.js"],"names":["React","Unity","UnityContent","Patreon","props","unityContent","send","onClick","bind","Component","Game"],"mappings":";;;;;;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,mBAApC;AAEA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AACE,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN,GADiB,CAGjB;AACA;AACA;;AAEA,UAAKC,YAAL,GAAoB,IAAIH,YAAJ,CAClB,wBADkB,EAElB,6BAFkB,CAApB;AAPiB;AAWlB,GAZH,CAcE;AACA;;;AAfF;AAAA;AAAA,8BAiBY;AAER;AACA;AACA;AAEA,WAAKG,YAAL,CAAkBC,IAAlB,CACE,iBADF,EAEE,cAFF,EAGE,EAHF;AAKD;AA5BH;AAAA;AAAA,6BA8BW;AAEP;AACA;AACA;AAEA,aACE,mBACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB;AAAjB,kBADF,EAEE,MAAC,KAAD;AAAO,QAAA,YAAY,EAAE,KAAKH;AAA1B,QAFF,CADF;AAMD;AA1CH;;AAAA;AAAA,EAA6BL,KAAK,CAACS,SAAnC;AA6CA,eAAeC,IAAf","sourcesContent":["// Get started by creating a new React \r\n// component and importing the libraries!\r\n\r\nimport React from \"react\";\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\n\r\nexport class Patreon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Next up create a new Unity Content object to \r\n    // initialise and define your WebGL build. The \r\n    // paths are relative from your index file.\r\n\r\n    this.unityContent = new UnityContent(\r\n      \"MyGame/Build/Game.json\",\r\n      \"MyGame/Build/UnityLoader.js\"\r\n    );\r\n  }\r\n\r\n  // create a new function for our button to send a\r\n  // message and spawn enemies in our unity game.\r\n\r\n  onClick() {\r\n\r\n    // this function sends a message to a game object \r\n    // named \"SpawnController\" to the public method\r\n    // \"SpawnEnemies\" with a value of \"10\".\r\n\r\n    this.unityContent.send(\r\n      \"SpawnController\", \r\n      \"SpawnEnemies\", \r\n      10\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    // Finally render the Unity component and pass \r\n    // the Unity content through the props. And create\r\n    // a button to handle the click event.\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.onClick.bind(this)}>Spawn!</button>\r\n        <Unity unityContent={this.unityContent} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}