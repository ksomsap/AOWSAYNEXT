{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport TopBarNav from './TopBarNav';\n\nconst Scene = ({\n  index\n}) => __jsx(View, {\n  style: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}, __jsx(Text, {\n  style: {\n    fontSize: 20\n  }\n}, index));\n\nconst ROUTES = {\n  Scene // ideally you would have a ROUTES object with multiple React component scenes\n\n}; // There are three types of labels (image, text, and element)\n\nconst ROUTESTACK = [{\n  image: require('./search.png'),\n  title: 'Scene'\n}, {\n  text: 'Hello',\n  title: 'Scene'\n}, // title is just the name of the Component being rendered.  See the renderScene property below\n{\n  element: __jsx(Text, null, \"World\"),\n  title: 'Scene'\n}];\nexport default class Example extends React.Component {\n  render() {\n    return __jsx(View, {\n      style: {\n        flex: 1\n      }\n    }, __jsx(TopBarNav // routeStack and renderScene are required props\n    , {\n      routeStack: ROUTESTACK,\n      renderScene: (route, i) => {\n        // This is a lot like the now deprecated Navigator component\n        let Component = ROUTES[route.title];\n        return __jsx(Component, {\n          index: i\n        });\n      } // Below are optional props\n      ,\n      headerStyle: [styles.headerStyle, {\n        paddingTop: 30\n      }] // probably want to add paddingTop if using TopBarNav for the  entire height of screen to account for notches/status bars\n      ,\n      labelStyle: styles.labelStyle,\n      underlineStyle: styles.underlineStyle,\n      imageStyle: styles.imageStyle,\n      sidePadding: 40 // Can't set sidePadding in headerStyle because it's needed to calculate the width of the tabs\n      ,\n      inactiveOpacity: 1,\n      fadeLabels: true\n    }));\n  }\n\n  anotherRender() {\n    // if rendering the nav bar at the bottom is your thing\n    return __jsx(View, {\n      style: {\n        flex: 1\n      }\n    }, __jsx(View, {\n      style: {\n        flex: 1,\n        transform: [{\n          scaleY: -1\n        }]\n      }\n    }, __jsx(TopBarNav // routeStack and renderScene are required props\n    , {\n      routeStack: ROUTESTACK,\n      renderScene: (route, i) => {\n        // This is a lot like the now deprecated Navigator component\n        let Component = ROUTES[route.title];\n        return __jsx(View, {\n          style: {\n            flex: 1,\n            transform: [{\n              scaleY: -1\n            }]\n          }\n        }, __jsx(Component, {\n          index: i\n        }));\n      } // Below are optional props\n      ,\n      headerStyle: {\n        paddingTop: 20,\n        transform: [{\n          scaleY: -1\n        }]\n      } // probably want to add paddingTop: 20 if using TopBarNav for the  entire height of screen on iOS\n      ,\n      underlineStyle: {\n        height: 3\n      }\n    })));\n  }\n\n}\nconst styles = StyleSheet.create({\n  headerStyle: {\n    borderBottomWidth: 1,\n    borderColor: '#e6faff',\n    backgroundColor: '#3385ff'\n  },\n  labelStyle: {\n    fontSize: 15,\n    fontWeight: '500',\n    color: '#fff'\n  },\n  imageStyle: {\n    height: 20,\n    width: 20,\n    tintColor: '#e6faff'\n  },\n  underlineStyle: {\n    height: 3.6,\n    backgroundColor: '#e6faff',\n    width: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/AOWSAY/Desktop/AOWSAYWEBSITE/server/pages/menu.js"],"names":["React","View","Text","StyleSheet","TopBarNav","Scene","index","flex","justifyContent","alignItems","fontSize","ROUTES","ROUTESTACK","image","require","title","text","element","Example","Component","render","route","i","styles","headerStyle","paddingTop","labelStyle","underlineStyle","imageStyle","anotherRender","transform","scaleY","height","create","borderBottomWidth","borderColor","backgroundColor","fontWeight","color","width","tintColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport TopBarNav from './TopBarNav';\r\n \r\nconst Scene = ({ index }) => (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={{ fontSize: 20 }}>{index}</Text>\r\n    </View>\r\n);\r\n \r\nconst ROUTES = {\r\n    Scene\r\n    // ideally you would have a ROUTES object with multiple React component scenes\r\n};\r\n \r\n// There are three types of labels (image, text, and element)\r\nconst ROUTESTACK = [\r\n    { image: require('./search.png'), title: 'Scene' },\r\n    { text: 'Hello', title: 'Scene' }, // title is just the name of the Component being rendered.  See the renderScene property below\r\n    { element: <Text>World</Text>, title: 'Scene' }\r\n];\r\n \r\nexport default class Example extends React.Component {\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <TopBarNav\r\n                    // routeStack and renderScene are required props\r\n                    routeStack={ROUTESTACK}\r\n                    renderScene={(route, i) => {\r\n                        // This is a lot like the now deprecated Navigator component\r\n                        let Component = ROUTES[route.title];\r\n                        return <Component index={i} />;\r\n                    }}\r\n                    // Below are optional props\r\n                    headerStyle={[styles.headerStyle, { paddingTop: 30 }]} // probably want to add paddingTop if using TopBarNav for the  entire height of screen to account for notches/status bars\r\n                    labelStyle={styles.labelStyle}\r\n                    underlineStyle={styles.underlineStyle}\r\n                    imageStyle={styles.imageStyle}\r\n                    sidePadding={40} // Can't set sidePadding in headerStyle because it's needed to calculate the width of the tabs\r\n                    inactiveOpacity={1}\r\n                    fadeLabels={true}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n \r\n    anotherRender() {\r\n        // if rendering the nav bar at the bottom is your thing\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <View style={{ flex: 1, transform: [{ scaleY: -1 }] }}>\r\n                    <TopBarNav\r\n                        // routeStack and renderScene are required props\r\n                        routeStack={ROUTESTACK}\r\n                        renderScene={(route, i) => {\r\n                            // This is a lot like the now deprecated Navigator component\r\n                            let Component = ROUTES[route.title];\r\n                            return (\r\n                                <View style={{ flex: 1, transform: [{ scaleY: -1 }] }}>\r\n                                    <Component index={i} />\r\n                                </View>\r\n                            );\r\n                        }}\r\n                        // Below are optional props\r\n                        headerStyle={{ paddingTop: 20, transform: [{ scaleY: -1 }] }} // probably want to add paddingTop: 20 if using TopBarNav for the  entire height of screen on iOS\r\n                        underlineStyle={{ height: 3 }}\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n    headerStyle: {\r\n        borderBottomWidth: 1,\r\n        borderColor: '#e6faff',\r\n        backgroundColor: '#3385ff'\r\n    },\r\n    labelStyle: {\r\n        fontSize: 15,\r\n        fontWeight: '500',\r\n        color: '#fff'\r\n    },\r\n    imageStyle: {\r\n        height: 20,\r\n        width: 20,\r\n        tintColor: '#e6faff'\r\n    },\r\n    underlineStyle: {\r\n        height: 3.6,\r\n        backgroundColor: '#e6faff',\r\n        width: 40\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}